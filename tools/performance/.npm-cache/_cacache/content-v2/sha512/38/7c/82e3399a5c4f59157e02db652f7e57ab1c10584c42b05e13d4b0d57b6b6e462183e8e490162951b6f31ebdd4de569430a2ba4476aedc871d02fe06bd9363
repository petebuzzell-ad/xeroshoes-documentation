{"_id":"humanize","_rev":"39-be809db44360a1a534a71627c346bc51","name":"humanize","dist-tags":{"latest":"0.0.9"},"versions":{"0.0.1":{"name":"humanize","version":"0.0.1","keywords":["util","client","browser"],"author":{"name":"Tai-Jin Lee","email":"taijin@gmail.com"},"_id":"humanize@0.0.1","maintainers":[{"name":"taijin","email":"taijin@gmail.com"}],"homepage":"https://github.com/taijinlee/humanize","dist":{"shasum":"beb46a9929907099040954d818494b56f3098970","tarball":"https://registry.npmjs.org/humanize/-/humanize-0.0.1.tgz","integrity":"sha512-ZShm8F2gs2T/fJFComAXNKy0HMZyCii37Od/UIZ2Uck2ZX6mmOYO0iAy4WDY/eIi5KTqIPF11cvRGqTiNsWd8Q==","signatures":[{"sig":"MEQCIHbWcUYjT2ETfncY84pBYVYYcQeMr9KoiAsRGG7u+i79AiA0cr9LQi31U281gNaSmVdiYfqNTDXIGQUEjLtlTMDBig==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}]},"main":"humanize.js","readme":"","engines":{"node":"*"},"_npmUser":{"name":"taijin","email":"taijin@gmail.com"},"repository":{"url":"git://github.com/taijinlee/humanize.git","type":"git"},"_npmVersion":"1.1.21","description":"Javascript string formatter for human readability","directories":{},"_nodeVersion":"v0.6.18","dependencies":{},"_defaultsLoaded":true,"devDependencies":{},"_engineSupported":true,"optionalDependencies":{}},"0.0.2":{"name":"humanize","version":"0.0.2","keywords":["util","client","browser"],"author":{"name":"Tai-Jin Lee","email":"taijin@gmail.com"},"_id":"humanize@0.0.2","maintainers":[{"name":"taijin","email":"taijin@gmail.com"}],"homepage":"https://github.com/taijinlee/humanize","dist":{"shasum":"4eb2c85f4ca89bc584ba0f401dc0bfe0fe58fc51","tarball":"https://registry.npmjs.org/humanize/-/humanize-0.0.2.tgz","integrity":"sha512-HOrkzzNjZli2wNKQBZW9KdMv1tvdxgdzJWuxwsm9tJkdhDodEAMp0VK+de+FM2dMDLwFZB4cdQhpFF9eAM9kbw==","signatures":[{"sig":"MEQCIH51Ms/Gv/y7+XE0TfnVa+iHl9zVEKO8Ticc48+HbE+iAiAQr8z54pcYjBkua/zydtgaatgG4QxxTwyBo+Ou5o9FCQ==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}]},"main":"humanize.js","readme":"# humanize #\n\nJavascript data formatter for human readability.\n\nIdea, name, and initial code blatently stolen from [milanvrekic/JS-humanize](http://github.com/milanvrekic/JS-humanize)\n\nCan be loaded via AMD or in node directly.\n\n## Installation ##\n\n    npm install humanize\n\n## Usage: ##\n```javascript\nvar humanize = require('humanize');\nhumanize.date('Y-m-d'); // 'yyyy-mm-dd'\nhumanize.filesize(1234567890); // '1.15 Gb'\n```\n\n## Functions available: ##\n\n####humanize.time()####\nRetrieves the current time in seconds\n\n####humanize.date(format [, timestamp or JS Date Object = new Date()])####\nThis is a port of [php.js date](http://phpjs.org/functions/date:380) and behaves exactly like [PHP's date](http://php.net/manual/en/function.date.php)\n\n####humanize.numberFormat(number [, decimals = 2, decPoint = '.', thousandsSep = ','])####\nFormat a number to have decimal significant decimal places, using decPoint as the decimal separator, and thousandsSep as thousands separater\n\n####humanize.naturalDay(timestamp [, format = 'Y-m-d'])####\nReturns 'today', 'tomorrow' or 'yesterday', as appropriate, otherwise format the date using the passed format with humanize.date()\n\n####humanize.naturalTime####\n\n####humanize.ordinal(integer)####\nConverts a number into its [ordinal representation](http://en.wikipedia.org/wiki/Ordinal_number_\\(linguistics\\)).\n\n####humanize.filesize(filesize [, kilo = 1024, decimals = 2, decPoint = '.', thousnadsSep = ',']) ####\nConverts a byte count to a human readable value using kilo as the basis, and numberFormat formatting\n\n####humanize.linebreaks(string)####\nConverts a string's newlines into properly formatted html ie. one new line -> br, two new lines -> p, entire thing wrapped in p\n\n####humanize.nl2br(string)####\nConverts a string's newlines into br's\n\n####humanize.truncatechars(string, length)####\nTruncates a string to length-1 and appends '…'. If string is shorter than length, then no-op\n\n####humanize.truncatewords(string, numWords)####\nTruncates a string to only include the first numWords words and appends '…'. If string has fewer words than newWords, then no-op\n","engines":{"node":"*"},"scripts":{"test":"find specs -type f -a -name *.spec.js -exec ./node_modules/mocha/bin/mocha --globals requirejsVars -R list --require should {} \\;"},"_npmUser":{"name":"taijin","email":"taijin@gmail.com"},"repository":{"url":"git://github.com/taijinlee/humanize.git","type":"git"},"_npmVersion":"1.1.21","description":"Javascript string formatter for human readability","directories":{},"_nodeVersion":"v0.6.18","dependencies":{},"_defaultsLoaded":true,"devDependencies":{"mocha":"1.0.3","should":"0.6.3"},"_engineSupported":true,"optionalDependencies":{}},"0.0.3":{"name":"humanize","version":"0.0.3","keywords":["util","client","browser"],"author":{"name":"Tai-Jin Lee","email":"taijin@gmail.com"},"_id":"humanize@0.0.3","maintainers":[{"name":"taijin","email":"taijin@gmail.com"}],"homepage":"https://github.com/taijinlee/humanize","dist":{"shasum":"1e6796bea0a8c7cef86c76f7164db937a9447e0b","tarball":"https://registry.npmjs.org/humanize/-/humanize-0.0.3.tgz","integrity":"sha512-36V10kVXYgTQhKQmZB2c8gOAzp5DSTrMeIdn17PpBB9CjfRO4zqBysnvxQ9feD7TkVr6qFB9x+OMQBaBqz3R+A==","signatures":[{"sig":"MEYCIQDbOZAwqtD6oWLJV8Z/T9ewQA+XVHdmHoocPGhe3BIw/AIhAJQ2eA96S4ehaMMj1Ye6eR/646igaCVmmXNBeN+EFM3J","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}]},"main":"humanize.js","readme":"# humanize #\n\nJavascript data formatter for human readability.\n\nIdea, name, and initial code blatently stolen from [milanvrekic/JS-humanize](http://github.com/milanvrekic/JS-humanize)\n\nCan be loaded via AMD or in node directly.\n\n## Installation ##\n\n    npm install humanize\n\n## Usage: ##\n```javascript\nvar humanize = require('humanize');\nhumanize.date('Y-m-d'); // 'yyyy-mm-dd'\nhumanize.filesize(1234567890); // '1.15 Gb'\n```\n\n## Functions available: ##\n\n####humanize.time()####\nRetrieves the current time in seconds\n\n####humanize.date(format [, timestamp / JS Date Object = new Date()])####\nThis is a port of [php.js date](http://phpjs.org/functions/date:380) and behaves exactly like [PHP's date](http://php.net/manual/en/function.date.php)\n\n####humanize.numberFormat(number [, decimals = 2, decPoint = '.', thousandsSep = ','])####\nFormat a number to have decimal significant decimal places, using decPoint as the decimal separator, and thousandsSep as thousands separater\n\n####humanize.naturalDay(timestamp [, format = 'Y-m-d'])####\nReturns 'today', 'tomorrow' or 'yesterday', as appropriate, otherwise format the date using the passed format with humanize.date()\n\n####humanize.naturalTime####\n\n####humanize.ordinal(integer)####\nConverts a number into its [ordinal representation](http://en.wikipedia.org/wiki/Ordinal_number_\\(linguistics\\)).\n\n####humanize.filesize(filesize [, kilo = 1024, decimals = 2, decPoint = '.', thousandsSep = ',']) ####\nConverts a byte count to a human readable value using kilo as the basis, and numberFormat formatting\n\n####humanize.linebreaks(string)####\nConverts a string's newlines into properly formatted html ie. one new line -> br, two new lines -> p, entire thing wrapped in p\n\n####humanize.nl2br(string)####\nConverts a string's newlines into br's\n\n####humanize.truncatechars(string, length)####\nTruncates a string to length-1 and appends '…'. If string is shorter than length, then no-op\n\n####humanize.truncatewords(string, numWords)####\nTruncates a string to only include the first numWords words and appends '…'. If string has fewer words than newWords, then no-op\n","engines":{"node":"*"},"scripts":{"test":"find specs -type f -a -name *.spec.js -exec ./node_modules/mocha/bin/mocha --globals requirejsVars -R list --require should {} \\;"},"_npmUser":{"name":"taijin","email":"taijin@gmail.com"},"repository":{"url":"git://github.com/taijinlee/humanize.git","type":"git"},"_npmVersion":"1.1.21","description":"Javascript string formatter for human readability","directories":{},"_nodeVersion":"v0.6.18","dependencies":{},"_defaultsLoaded":true,"devDependencies":{"mocha":"1.0.3","should":"0.6.3"},"_engineSupported":true,"optionalDependencies":{}},"0.0.4":{"name":"humanize","version":"0.0.4","keywords":["util","client","browser"],"author":{"name":"Tai-Jin Lee","email":"taijin@gmail.com"},"_id":"humanize@0.0.4","maintainers":[{"name":"taijin","email":"taijin@gmail.com"}],"homepage":"https://github.com/taijinlee/humanize","dist":{"shasum":"ed6baba176a70f2848019174db2412e212aa53a5","tarball":"https://registry.npmjs.org/humanize/-/humanize-0.0.4.tgz","integrity":"sha512-ApIwK2abKPKe78FZnEZ+70YvTTPF0TmRMMMybI7rSOjp55g/oRNG0PxLR60p1lJnuRP6hEgiG0CM9i4niMzoaA==","signatures":[{"sig":"MEUCIQCMj/H/Y/Ay+988nsZib2XBiagAgkmxSg87aBNk1yDJBwIgbkD1nG8Sb4q73IO3/pqT/Vo5SlBvDYQVWDNVvcMAZkk=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}]},"main":"humanize.js","readme":"# humanize #\n\nJavascript data formatter for human readability.\n\nIdea, name, and initial code blatently stolen from [milanvrekic/JS-humanize](http://github.com/milanvrekic/JS-humanize)\n\nCan be loaded via AMD or in node directly.\n\n## Installation ##\n\n    npm install humanize\n\n## Usage: ##\n```javascript\nvar humanize = require('humanize');\nhumanize.date('Y-m-d'); // 'yyyy-mm-dd'\nhumanize.filesize(1234567890); // '1.15 Gb'\n```\n\n## Functions available: ##\n\n####humanize.noConflict()####\nGive control of the \"humanize\" variable back to its previous owner. Returns a reference to the humanize object.\n\n####humanize.time()####\nRetrieves the current time in seconds\n\n####humanize.date(format [, timestamp / JS Date Object = new Date()])####\nThis is a port of [php.js date](http://phpjs.org/functions/date:380) and behaves exactly like [PHP's date](http://php.net/manual/en/function.date.php)\n\n####humanize.numberFormat(number [, decimals = 2, decPoint = '.', thousandsSep = ','])####\nFormat a number to have decimal significant decimal places, using decPoint as the decimal separator, and thousandsSep as thousands separater\n\n####humanize.naturalDay(timestamp [, format = 'Y-m-d'])####\nReturns 'today', 'tomorrow' or 'yesterday', as appropriate, otherwise format the date using the passed format with humanize.date()\n\n####humanize.naturalTime####\n\n####humanize.ordinal(integer)####\nConverts a number into its [ordinal representation](http://en.wikipedia.org/wiki/Ordinal_number_\\(linguistics\\)).\n\n####humanize.filesize(filesize [, kilo = 1024, decimals = 2, decPoint = '.', thousandsSep = ',']) ####\nConverts a byte count to a human readable value using kilo as the basis, and numberFormat formatting\n\n####humanize.linebreaks(string)####\nConverts a string's newlines into properly formatted html ie. one new line -> br, two new lines -> p, entire thing wrapped in p\n\n####humanize.nl2br(string)####\nConverts a string's newlines into br's\n\n####humanize.truncatechars(string, length)####\nTruncates a string to length-1 and appends '…'. If string is shorter than length, then no-op\n\n####humanize.truncatewords(string, numWords)####\nTruncates a string to only include the first numWords words and appends '…'. If string has fewer words than newWords, then no-op\n","engines":{"node":"*"},"scripts":{"test":"./node_modules/jshint/bin/hint humanize.js; find specs -type f -a -name *.spec.js -exec ./node_modules/mocha/bin/mocha --globals requirejsVars -R list --require should {} \\;"},"_npmUser":{"name":"taijin","email":"taijin@gmail.com"},"repository":{"url":"git://github.com/taijinlee/humanize.git","type":"git"},"_npmVersion":"1.1.21","description":"Javascript string formatter for human readability","directories":{},"_nodeVersion":"v0.6.18","dependencies":{},"_defaultsLoaded":true,"devDependencies":{"mocha":"1.0.3","jshint":"0.7.1","should":"0.6.3"},"_engineSupported":true,"optionalDependencies":{}},"0.0.5":{"name":"humanize","version":"0.0.5","keywords":["util","client","browser"],"author":{"name":"Tai-Jin Lee","email":"taijin@gmail.com"},"_id":"humanize@0.0.5","maintainers":[{"name":"taijin","email":"taijin@gmail.com"}],"homepage":"https://github.com/taijinlee/humanize","dist":{"shasum":"07f99d535013eb341c5026d23880132247430720","tarball":"https://registry.npmjs.org/humanize/-/humanize-0.0.5.tgz","integrity":"sha512-YRm5IkOja/yFRZL/Gg4yI7PoZV2hOSGMltBZ3poNvyGy8e/lNiTD7PeBH8/NBvlLFUiuBDscF4YML9LgbD2BEg==","signatures":[{"sig":"MEQCIH7sFgs3Rp+5wy8FTt0nEIKmyrVfkrdhxQZKAzYauaRrAiAVJitNa+yvtwyLiPEDOPNkkJdBliu/Ltb3bT0dK42ykQ==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}]},"main":"humanize.js","readme":"# humanize #\n\nJavascript data formatter for human readability.\n\nIdea, name, and initial code blatently stolen from [milanvrekic/JS-humanize](http://github.com/milanvrekic/JS-humanize)\n\nCan be loaded via AMD or in node directly.\n\n## Installation ##\n\n    npm install humanize\n\n## Usage: ##\n```javascript\nvar humanize = require('humanize');\nhumanize.date('Y-m-d'); // 'yyyy-mm-dd'\nhumanize.filesize(1234567890); // '1.15 Gb'\n```\n\n## Functions available: ##\n\n####humanize.noConflict()####\nGive control of the \"humanize\" variable back to its previous owner. Returns a reference to the humanize object.\n\n####humanize.time()####\nRetrieves the current time in seconds\n\n####humanize.date(format [, timestamp / JS Date Object = new Date()])####\nThis is a port of [php.js date](http://phpjs.org/functions/date:380) and behaves exactly like [PHP's date](http://php.net/manual/en/function.date.php)\n\n####humanize.numberFormat(number [, decimals = 2, decPoint = '.', thousandsSep = ','])####\nFormat a number to have decimal significant decimal places, using decPoint as the decimal separator, and thousandsSep as thousands separater\n\n####humanize.naturalDay(timestamp [, format = 'Y-m-d'])####\nReturns 'today', 'tomorrow' or 'yesterday', as appropriate, otherwise format the date using the passed format with humanize.date()\n\n####humanize.relativeTime(timestamp)####\nReturns a relative time to the current time, seconds as the most granular up to years to the least granular.\n\n####humanize.ordinal(integer)####\nConverts a number into its [ordinal representation](http://en.wikipedia.org/wiki/Ordinal_number_\\(linguistics\\)).\n\n####humanize.filesize(filesize [, kilo = 1024, decimals = 2, decPoint = '.', thousandsSep = ',']) ####\nConverts a byte count to a human readable value using kilo as the basis, and numberFormat formatting\n\n####humanize.linebreaks(string)####\nConverts a string's newlines into properly formatted html ie. one new line -> br, two new lines -> p, entire thing wrapped in p\n\n####humanize.nl2br(string)####\nConverts a string's newlines into br's\n\n####humanize.truncatechars(string, length)####\nTruncates a string to length-1 and appends '…'. If string is shorter than length, then no-op\n\n####humanize.truncatewords(string, numWords)####\nTruncates a string to only include the first numWords words and appends '…'. If string has fewer words than newWords, then no-op\n","engines":{"node":"*"},"scripts":{"test":"./node_modules/jshint/bin/hint humanize.js; find specs -type f -a -name *.spec.js -exec ./node_modules/mocha/bin/mocha --globals requirejsVars -R list --require should {} \\;"},"_npmUser":{"name":"taijin","email":"taijin@gmail.com"},"repository":{"url":"git://github.com/taijinlee/humanize.git","type":"git"},"_npmVersion":"1.1.24","description":"Javascript string formatter for human readability","_nodeVersion":"v0.6.19","dependencies":{},"_defaultsLoaded":true,"devDependencies":{"mocha":"1.0.3","jshint":"0.7.1","should":"0.6.3"},"_engineSupported":true,"optionalDependencies":{},"directories":{}},"0.0.6":{"name":"humanize","version":"0.0.6","keywords":["util","client","browser"],"author":{"name":"Tai-Jin Lee","email":"taijin@gmail.com"},"_id":"humanize@0.0.6","maintainers":[{"name":"taijin","email":"taijin@gmail.com"}],"homepage":"https://github.com/taijinlee/humanize","dist":{"shasum":"8fa7f75f26efdf148c74cd9a356f5b918065772c","tarball":"https://registry.npmjs.org/humanize/-/humanize-0.0.6.tgz","integrity":"sha512-k7Fd8cJMVFMLhIEGZ+MsdWbV+hUgYK8N9NHSDaG4yDOv5Rng0FUN3AcvF96Qk/bQv2lJD7HrAEyGHVbP6WTAFA==","signatures":[{"sig":"MEUCIQDZCBkGarS2ab4NiMXpf+cmo44SK/tnrJtFYJfpRSK/awIgLtD2ydRMdlSYSZl0ypAApf//WsR74KgQbVGGlpnJetY=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}]},"main":"humanize.js","readme":"# humanize #\n\nJavascript data formatter for human readability.\n\nIdea, name, and initial code blatently stolen from [milanvrekic/JS-humanize](http://github.com/milanvrekic/JS-humanize)\n\nCan be loaded via AMD or in node directly.\n\n## Installation ##\n\n    npm install humanize\n\n## Usage: ##\n```javascript\nvar humanize = require('humanize');\nhumanize.date('Y-m-d'); // 'yyyy-mm-dd'\nhumanize.filesize(1234567890); // '1.15 Gb'\n```\n\n## Functions available: ##\n\n####humanize.noConflict()####\nGive control of the \"humanize\" variable back to its previous owner. Returns a reference to the humanize object.\n\n####humanize.time()####\nRetrieves the current time in seconds\n\n####humanize.date(format [, timestamp / JS Date Object = new Date()])####\nThis is a port of [php.js date](http://phpjs.org/functions/date:380) and behaves exactly like [PHP's date](http://php.net/manual/en/function.date.php)\n\n####humanize.numberFormat(number [, decimals = 2, decPoint = '.', thousandsSep = ','])####\nFormat a number to have decimal significant decimal places, using decPoint as the decimal separator, and thousandsSep as thousands separater\n\n####humanize.naturalDay(timestamp [, format = 'Y-m-d'])####\nReturns 'today', 'tomorrow' or 'yesterday', as appropriate, otherwise format the date using the passed format with humanize.date()\n\n####humanize.relativeTime(timestamp)####\nReturns a relative time to the current time, seconds as the most granular up to years to the least granular.\n\n####humanize.ordinal(integer)####\nConverts a number into its [ordinal representation](http://en.wikipedia.org/wiki/Ordinal_number_\\(linguistics\\)).\n\n####humanize.filesize(filesize [, kilo = 1024, decimals = 2, decPoint = '.', thousandsSep = ',']) ####\nConverts a byte count to a human readable value using kilo as the basis, and numberFormat formatting\n\n####humanize.linebreaks(string)####\nConverts a string's newlines into properly formatted html ie. one new line -> br, two new lines -> p, entire thing wrapped in p\n\n####humanize.nl2br(string)####\nConverts a string's newlines into br's\n\n####humanize.truncatechars(string, length)####\nTruncates a string to length-1 and appends '…'. If string is shorter than length, then no-op\n\n####humanize.truncatewords(string, numWords)####\nTruncates a string to only include the first numWords words and appends '…'. If string has fewer words than newWords, then no-op\n","engines":{"node":"*"},"scripts":{"test":"./node_modules/jshint/bin/hint humanize.js; find specs -type f -a -name *.spec.js -exec ./node_modules/mocha/bin/mocha --globals requirejsVars -R list --require should {} \\;"},"_npmUser":{"name":"taijin","email":"taijin@gmail.com"},"repository":{"url":"git://github.com/taijinlee/humanize.git","type":"git"},"_npmVersion":"1.1.24","description":"Javascript string formatter for human readability","_nodeVersion":"v0.6.19","dependencies":{},"_defaultsLoaded":true,"devDependencies":{"mocha":"1.0.3","jshint":"0.7.1","should":"0.6.3"},"_engineSupported":true,"optionalDependencies":{},"directories":{}},"0.0.7":{"name":"humanize","version":"0.0.7","keywords":["util","client","browser"],"author":{"name":"Tai-Jin Lee","email":"taijin@gmail.com"},"_id":"humanize@0.0.7","maintainers":[{"name":"taijin","email":"taijin@gmail.com"}],"homepage":"https://github.com/taijinlee/humanize","dist":{"shasum":"371fc54e1a8d361ea8bb40e4707e5a0ab47413b3","tarball":"https://registry.npmjs.org/humanize/-/humanize-0.0.7.tgz","integrity":"sha512-lnUbxlNuidyPpcTqa75beiID24rJi5MeYj/j7NiCvKNUOLTaNQ38R+zcsN0AFUHZCZOIyhvyDgLIP3Xwry4KlA==","signatures":[{"sig":"MEUCIQCQt2++u/G5eZYlWzLAbFyA9AX3gcUonasl/BRmedDY3gIgQ4pDEAPKY4fqoi+5edlUCwa2Az3je8jVpEnn0vl0ZCs=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}]},"main":"humanize.js","_from":".","readme":"# humanize #\n\nJavascript data formatter for human readability.\n\nIdea, name, and initial code blatently stolen from [milanvrekic/JS-humanize](http://github.com/milanvrekic/JS-humanize)\n\nCan be loaded via AMD or in node directly.\n\n## Installation ##\n\n    npm install humanize\n\n## Usage: ##\n```javascript\nvar humanize = require('humanize');\nhumanize.date('Y-m-d'); // 'yyyy-mm-dd'\nhumanize.filesize(1234567890); // '1.15 Gb'\n```\n\n## Functions available: ##\n\n####humanize.noConflict()####\nGive control of the \"humanize\" variable back to its previous owner. Returns a reference to the humanize object.\n\n####humanize.time()####\nRetrieves the current time in seconds\n\n####humanize.date(format [, timestamp / JS Date Object = new Date()])####\nThis is a port of [php.js date](http://phpjs.org/functions/date:380) and behaves exactly like [PHP's date](http://php.net/manual/en/function.date.php)\n\n####humanize.numberFormat(number [, decimals = 2, decPoint = '.', thousandsSep = ','])####\nFormat a number to have decimal significant decimal places, using decPoint as the decimal separator, and thousandsSep as thousands separater\n\n####humanize.naturalDay(timestamp [, format = 'Y-m-d'])####\nReturns 'today', 'tomorrow' or 'yesterday', as appropriate, otherwise format the date using the passed format with humanize.date()\n\n####humanize.relativeTime(timestamp)####\nReturns a relative time to the current time, seconds as the most granular up to years to the least granular.\n\n####humanize.ordinal(integer)####\nConverts a number into its [ordinal representation](http://en.wikipedia.org/wiki/Ordinal_number_\\(linguistics\\)).\n\n####humanize.filesize(filesize [, kilo = 1024, decimals = 2, decPoint = '.', thousandsSep = ',']) ####\nConverts a byte count to a human readable value using kilo as the basis, and numberFormat formatting\n\n####humanize.linebreaks(string)####\nConverts a string's newlines into properly formatted html ie. one new line -> br, two new lines -> p, entire thing wrapped in p\n\n####humanize.nl2br(string)####\nConverts a string's newlines into br's\n\n####humanize.truncatechars(string, length)####\nTruncates a string to length-1 and appends '…'. If string is shorter than length, then no-op\n\n####humanize.truncatewords(string, numWords)####\nTruncates a string to only include the first numWords words and appends '…'. If string has fewer words than newWords, then no-op\n","engines":{"node":"*"},"scripts":{"test":"./node_modules/jshint/bin/hint humanize.js; find specs -type f -a -name *.spec.js -exec ./node_modules/mocha/bin/mocha --globals requirejsVars -R list --require should {} \\;"},"_npmUser":{"name":"taijin","email":"taijin@gmail.com"},"repository":{"url":"git://github.com/taijinlee/humanize.git","type":"git"},"_npmVersion":"1.2.15","description":"Javascript string formatter for human readability","dependencies":{},"readmeFilename":"README.md","devDependencies":{"mocha":"1.0.3","jshint":"0.7.1","should":"0.6.3"},"optionalDependencies":{},"directories":{}},"0.0.8":{"name":"humanize","version":"0.0.8","keywords":["util","client","browser"],"author":{"name":"Tai-Jin Lee","email":"taijin@gmail.com"},"_id":"humanize@0.0.8","maintainers":[{"name":"taijin","email":"taijin@gmail.com"}],"homepage":"https://github.com/taijinlee/humanize","dist":{"shasum":"3a1a29aca7ba939b786d6ae68990acb5694171f8","tarball":"https://registry.npmjs.org/humanize/-/humanize-0.0.8.tgz","integrity":"sha512-lriIosGJOOGfDPWIwu04yShn8xF3v8uQrrdor2+pWHUwZZ9Eywi5KbkDoJMGWT+mAqnusLJlQsROKlLI3bMbww==","signatures":[{"sig":"MEQCIHsKhRUxS0/B5mjUhAmmLx15uSx2xW/Bysfah1xh5esKAiBhkOwLYvYPGOnERuyqaU+Io4qG40l5ea9IFGrI43IY0w==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}]},"main":"humanize.js","_from":".","readme":"# humanize #\n\nJavascript data formatter for human readability.\n\nIdea, name, and initial code blatently stolen from [milanvrekic/JS-humanize](http://github.com/milanvrekic/JS-humanize)\n\nCan be loaded via AMD or in node directly.\n\n## Installation ##\n\n    npm install humanize\n\n## Usage: ##\n```javascript\nvar humanize = require('humanize');\nhumanize.date('Y-m-d'); // 'yyyy-mm-dd'\nhumanize.filesize(1234567890); // '1.15 Gb'\n```\n\n## Functions available: ##\n\n####humanize.noConflict()####\nGive control of the \"humanize\" variable back to its previous owner. Returns a reference to the humanize object.\n\n####humanize.time()####\nRetrieves the current time in seconds\n\n####humanize.date(format [, timestamp / JS Date Object = new Date()])####\nThis is a port of [php.js date](http://phpjs.org/functions/date:380) and behaves exactly like [PHP's date](http://php.net/manual/en/function.date.php)\n\n####humanize.numberFormat(number [, decimals = 2, decPoint = '.', thousandsSep = ','])####\nFormat a number to have decimal significant decimal places, using decPoint as the decimal separator, and thousandsSep as thousands separater\n\n####humanize.naturalDay(timestamp [, format = 'Y-m-d'])####\nReturns 'today', 'tomorrow' or 'yesterday', as appropriate, otherwise format the date using the passed format with humanize.date()\n\n####humanize.relativeTime(timestamp)####\nReturns a relative time to the current time, seconds as the most granular up to years to the least granular.\n\n####humanize.ordinal(integer)####\nConverts a number into its [ordinal representation](http://en.wikipedia.org/wiki/Ordinal_number_\\(linguistics\\)).\n\n####humanize.filesize(filesize [, kilo = 1024, decimals = 2, decPoint = '.', thousandsSep = ',']) ####\nConverts a byte count to a human readable value using kilo as the basis, and numberFormat formatting\n\n####humanize.linebreaks(string)####\nConverts a string's newlines into properly formatted html ie. one new line -> br, two new lines -> p, entire thing wrapped in p\n\n####humanize.nl2br(string)####\nConverts a string's newlines into br's\n\n####humanize.truncatechars(string, length)####\nTruncates a string to length-1 and appends '…'. If string is shorter than length, then no-op\n\n####humanize.truncatewords(string, numWords)####\nTruncates a string to only include the first numWords words and appends '…'. If string has fewer words than newWords, then no-op\n","engines":{"node":"*"},"scripts":{"test":"./node_modules/jshint/bin/hint humanize.js; find specs -type f -a -name *.spec.js -exec ./node_modules/mocha/bin/mocha --globals requirejsVars -R list --require should {} \\;"},"_npmUser":{"name":"taijin","email":"taijin@gmail.com"},"repository":{"url":"git://github.com/taijinlee/humanize.git","type":"git"},"_npmVersion":"1.2.18","description":"Javascript string formatter for human readability","dependencies":{},"readmeFilename":"README.md","devDependencies":{"mocha":"1.0.3","jshint":"0.7.1","should":"0.6.3"},"optionalDependencies":{},"directories":{}},"0.0.9":{"name":"humanize","version":"0.0.9","keywords":["util","client","browser"],"author":{"name":"Tai-Jin Lee","email":"taijin@gmail.com"},"_id":"humanize@0.0.9","maintainers":[{"name":"taijin","email":"taijin@gmail.com"}],"homepage":"https://github.com/taijinlee/humanize","bugs":{"url":"https://github.com/taijinlee/humanize/issues"},"dist":{"shasum":"1994ffaecdfe9c441ed2bdac7452b7bb4c9e41a4","tarball":"https://registry.npmjs.org/humanize/-/humanize-0.0.9.tgz","integrity":"sha512-bvZZ7vXpr1RKoImjuQ45hJb5OvE2oJafHysiD/AL3nkqTZH2hFCjQ3YZfCd63FefDitbJze/ispUPP0gfDsT2Q==","signatures":[{"sig":"MEUCIDCvWXKlkA8lfMYKXe9eyZSVr25DVljGMdTgBMLyscn0AiEA8izx0pj0BH/INzKQpUEwyjndipfP0ekZhTBxQF3P6Ms=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}]},"main":"humanize.js","_from":".","readme":"# humanize #\n\nJavascript data formatter for human readability.\n\nIdea, name, and initial code blatently stolen from [milanvrekic/JS-humanize](http://github.com/milanvrekic/JS-humanize)\n\nCan be loaded via AMD or in node directly.\n\n## Installation ##\n\n    npm install humanize\n\n## Usage: ##\n```javascript\nvar humanize = require('humanize');\nhumanize.date('Y-m-d'); // 'yyyy-mm-dd'\nhumanize.filesize(1234567890); // '1.15 Gb'\n```\n\n## Functions available: ##\n\n####humanize.noConflict()####\nGive control of the \"humanize\" variable back to its previous owner. Returns a reference to the humanize object.\n\n####humanize.time()####\nRetrieves the current time in seconds\n\n####humanize.date(format [, timestamp / JS Date Object = new Date()])####\nThis is a port of [php.js date](http://phpjs.org/functions/date:380) and behaves exactly like [PHP's date](http://php.net/manual/en/function.date.php)\n\n####humanize.numberFormat(number [, decimals = 2, decPoint = '.', thousandsSep = ','])####\nFormat a number to have decimal significant decimal places, using decPoint as the decimal separator, and thousandsSep as thousands separater\n\n####humanize.naturalDay(timestamp [, format = 'Y-m-d'])####\nReturns 'today', 'tomorrow' or 'yesterday', as appropriate, otherwise format the date using the passed format with humanize.date()\n\n####humanize.relativeTime(timestamp)####\nReturns a relative time to the current time, seconds as the most granular up to years to the least granular.\n\n####humanize.ordinal(integer)####\nConverts a number into its [ordinal representation](http://en.wikipedia.org/wiki/Ordinal_number_\\(linguistics\\)).\n\n####humanize.filesize(filesize [, kilo = 1024, decimals = 2, decPoint = '.', thousandsSep = ',']) ####\nConverts a byte count to a human readable value using kilo as the basis, and numberFormat formatting\n\n####humanize.linebreaks(string)####\nConverts a string's newlines into properly formatted html ie. one new line -> br, two new lines -> p, entire thing wrapped in p\n\n####humanize.nl2br(string)####\nConverts a string's newlines into br's\n\n####humanize.truncatechars(string, length)####\nTruncates a string to length-1 and appends '…'. If string is shorter than length, then no-op\n\n####humanize.truncatewords(string, numWords)####\nTruncates a string to only include the first numWords words and appends '…'. If string has fewer words than newWords, then no-op\n","engines":{"node":"*"},"scripts":{"test":"./node_modules/jshint/bin/hint humanize.js; find specs -type f -a -name *.spec.js -exec ./node_modules/mocha/bin/mocha --globals requirejsVars -R list --require should {} \\;"},"_npmUser":{"name":"taijin","email":"taijin@gmail.com"},"repository":{"url":"git://github.com/taijinlee/humanize.git","type":"git"},"_npmVersion":"1.3.8","description":"Javascript string formatter for human readability","dependencies":{},"readmeFilename":"README.md","devDependencies":{"mocha":"1.0.3","jshint":"0.7.1","should":"0.6.3"},"optionalDependencies":{},"directories":{}}},"time":{"created":"2012-05-24T06:28:55.712Z","modified":"2024-10-22T17:26:47.064Z","0.0.1":"2012-05-24T06:28:57.049Z","0.0.2":"2012-05-25T04:59:35.124Z","0.0.3":"2012-05-26T01:24:21.968Z","0.0.4":"2012-05-26T18:48:55.205Z","0.0.5":"2012-06-12T01:28:53.491Z","0.0.6":"2012-06-22T20:39:30.076Z","0.0.7":"2013-04-21T20:22:44.681Z","0.0.8":"2013-07-10T20:58:02.502Z","0.0.9":"2013-09-19T23:37:37.846Z"},"author":{"name":"Tai-Jin Lee","email":"taijin@gmail.com"},"repository":{"url":"git://github.com/taijinlee/humanize.git","type":"git"},"description":"Javascript string formatter for human readability","keywords":["util","client","browser"],"homepage":"https://github.com/taijinlee/humanize","bugs":{"url":"https://github.com/taijinlee/humanize/issues"},"maintainers":[{"name":"taijin","email":"taijin@gmail.com"}],"readme":"","users":{"biant":true,"sky3r":true,"rph_tw":true,"capsian":true,"danopia":true,"liunian":true,"davidrapin":true,"tomasgvivo":true,"shanewholloway":true,"juancarloscruzd":true}}